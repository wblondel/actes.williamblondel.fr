#!/bin/sh

if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <sqlite_file>"
    exit 1
fi

sqlite_file="$1"

if [ ! -f "$sqlite_file" ]; then
    echo "File not found: $sqlite_file"
    exit 1
fi

user_agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"

set -- ""
while IFS= read -r url; do
  set -- "$@" "$url"
done <<EOF
$(sqlite3 "$sqlite_file" <<SQL
.mode list
SELECT url FROM urls;
.quit
SQL
)
EOF

# Shift to ignore the initial empty parameter
shift

# Loop through each URL in positional parameters
for url do
    # Perform a HEAD request and retrieve only the response headers
    status_code=$(curl -Is -o /dev/null -w "%{http_code}" -A "$user_agent" -L "$url")

    # Check if the status code indicates a dead link
    if [ "$status_code" = "000" ] || [ "$status_code" = "404" ] || [ "$status_code" = "500" ]; then
        echo "URL $url is possibly dead (HTTP status code: $status_code)"
        sqlite3 "$sqlite_file" "UPDATE urls SET is_dead=true WHERE url=\"$url\";"
    else
        echo "URL $url is alive (HTTP status code: $status_code)"
        sqlite3 "$sqlite_file" "UPDATE urls SET is_dead=false WHERE url=\"$url\";"
    fi
done